swagger: '2.0'
info:
  description: Golang Todo List API
  version: 1.0.0
  title: Golang Todo List
  contact:
    email: andrea.medda.uni@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /AndreaM16/Go-Todo-List/1.0.0
tags:
- name: developers
  description: Operations available to regular developers
schemes:
- https
paths:
  /todo:
    get:
      tags:
      - developers
      summary: gets todo/todos
      description: |
        By passing in the appropriate options, you can get one or many todos
      operationId: app.getTodo
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        type: string
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/todo'
        400:
          description: bad input parameter
    post:
      tags:
      - developers
      summary: adds a todo item
      description: |
        By passing in the appropriate options, you can add a todo to the system
      operationId: app.addTodo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: todo
        description: todo item to add
        required: false
        schema:
          $ref: '#/definitions/todo'
      responses:
        201:
          description: todo created
        400:
          description: invalid input, object invalid
        409:
          description: an existing todo already exists
    put:
      tags:
      - developers
      summary: edit a todo item
      description: |
        By passing in the appropriate options, you can edit a todo
      operationId: app.editTodo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: todo
        description: todo item to edit
        required: false
        schema:
          $ref: '#/definitions/todo'
      responses:
        201:
          description: todo edited
        400:
          description: invalid input, object invalid
    delete:
      tags:
      - developers
      summary: deletes a todo item
      description: |
        By passing in the appropriate options, you can delete an existing todo
      operationId: app.deleteTodo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: todo
        description: todo item to delete
        required: false
        schema:
          $ref: '#/definitions/todo'
      responses:
        201:
          description: todo deleted
        400:
          description: invalid input, object invalid
        409:
          description: todo does not exist
definitions:
  todo:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        example: aeb5612bm9
      content:
        type: string
        example: Get some Nugs
    example:
      id: aeb5612bm9
      content: Get some Nugs
